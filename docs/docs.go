// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://localhost:8081/terms/",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/movies": {
            "get": {
                "description": "show all movies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET All Movies"
                ],
                "summary": "show all movies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/server_side.Movie"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server_side.Movie"
                        }
                    }
                }
            },
            "post": {
                "description": "create movie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "POST Movie"
                ],
                "summary": "create movie",
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/movies/id/{id}": {
            "get": {
                "description": "show movie by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GET Movie by Id"
                ],
                "summary": "show movie by Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server_side.Movie"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/server_side.Movie"
                        }
                    }
                }
            },
            "put": {
                "description": "update movie by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UPDATE Movie by Id"
                ],
                "summary": "update movie by Id",
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "delete movie by Id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "DELETE Movie by Id"
                ],
                "summary": "delete movie by Id",
                "responses": {
                    "200": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "server_side.Movie": {
            "type": "object",
            "properties": {
                "director": {
                    "type": "string"
                },
                "done": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1/",
	Schemes:          []string{},
	Title:            "to-do-Movie API",
	Description:      "This is a sample server celler server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
